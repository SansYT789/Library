local Players = game:GetService("Players")
local PathfindingService = game:GetService("PathfindingService")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

local MAP_MIN = Vector3.new(-200,0,-200)
local MAP_MAX = Vector3.new(200,0,200)

local function getOtherPlayers()
    local list = {}
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= player and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            table.insert(list, p.Character.HumanoidRootPart)
        end
    end
    return list
end

local function getRandomPoint()
    local x = math.random(MAP_MIN.X, MAP_MAX.X)
    local z = math.random(MAP_MIN.Z, MAP_MAX.Z)
    local ray = Ray.new(Vector3.new(x,500,z), Vector3.new(0,-1000,0))
    local hit, pos = Workspace:FindPartOnRayWithIgnoreList(ray, {character})
    if hit then
        return pos + Vector3.new(0,2,0)
    else
        return Vector3.new(x,5,z)
    end
end

local function avoidPlayers(targetPos)
    local others = getOtherPlayers()
    for _, part in ipairs(others) do
        if (part.Position - targetPos).magnitude < 10 then
            targetPos = targetPos + Vector3.new(math.random(-10,10),0,math.random(-10,10))
        end
    end
    return targetPos
end

local function moveTo(targetPos)
    targetPos = avoidPlayers(targetPos)

    local path = PathfindingService:CreatePath({
        AgentRadius = 2,
        AgentHeight = 5,
        AgentCanJump = true,
        AgentJumpHeight = 25,
        AgentMaxSlope = 55,
    })

    path:ComputeAsync(rootPart.Position, targetPos)
    path:MoveTo(character)

    local lastPos = rootPart.Position
    local stuckTime = 0

    local conn
    conn = RunService.RenderStepped:Connect(function(delta)
        if (rootPart.Position - lastPos).magnitude < 0.05 then
            stuckTime = stuckTime + delta
        else
            stuckTime = 0
        end
        lastPos = rootPart.Position

        if stuckTime > 2 then
            rootPart.CFrame = CFrame.new(targetPos + Vector3.new(0,5,0))
            humanoid.Jump = true
            stuckTime = 0
        end
    end)

    path.MoveToFinished:Wait()
    conn:Disconnect()
end

spawn(function()
    while true do
        local point = getRandomPoint()
        moveTo(point)
        wait(math.random(0.3,1))
    end
end)
