local Players = game:GetService("Players")
local PathfindingService = game:GetService("PathfindingService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local humanoid = char:WaitForChild("Humanoid")
local root = char:WaitForChild("HumanoidRootPart")

local STUCK_TIMEOUT = 5
local TELEPORT_DISTANCE = 10
local WALK_RADIUS = 50

local lastPos = root.Position
local stuckTime = 0

local function getRandomPoint()
	local base = workspace.CurrentCamera.CFrame.Position
	local offset = Vector3.new(
		math.random(-WALK_RADIUS, WALK_RADIUS),
		0,
		math.random(-WALK_RADIUS, WALK_RADIUS)
	)
	return base + offset
end

local function moveToPoint(destination)
	local path = PathfindingService:CreatePath()
	path:ComputeAsync(root.Position, destination)

	if path.Status == Enum.PathStatus.Complete then
		local waypoints = path:GetWaypoints()
		for _, waypoint in ipairs(waypoints) do
			humanoid:MoveTo(waypoint.Position)
			humanoid.MoveToFinished:Wait()
		end
	else
		root.CFrame = CFrame.new(destination + Vector3.new(0, 3, 0))
	end
end

task.spawn(function()
	while task.wait(0.5) do
		-- Check stuck
		local dist = (root.Position - lastPos).Magnitude
		if dist < 1 then
			stuckTime = stuckTime + 0.5
			if stuckTime >= STUCK_TIMEOUT then
				print("⚠️ Stuck → move slightly...")
				root.CFrame = root.CFrame + Vector3.new(TELEPORT_DISTANCE, 3, 0)
				stuckTime = 0
			end
		else
			stuckTime = 0
		end
		lastPos = root.Position

		if humanoid.MoveToFinished or dist < 3 then
			local newPoint = getRandomPoint()
			moveToPoint(newPoint)
		end
	end
end)
